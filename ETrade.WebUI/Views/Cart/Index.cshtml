@{
    ViewData["Title"] = "Shopping Cart";
    var cartItems = ViewBag.CartItems as IEnumerable<ETrade.WebUI.Models.Basket.CartItemViewModel>;
    var totalAmount = (decimal)ViewBag.TotalAmount;

    // Biçimlendirilmiş toplam tutar
    string formattedTotalAmount = string.Format("₺{0:#,##0.00}", totalAmount);
}

<div class="container mt-5">
    <h2>@ViewData["Title"]</h2>

    @if (cartItems != null && cartItems.Any())
    {
        <form asp-action="UpdateCart" asp-controller="Cart" method="post">
            <table class="table">
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Description</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Subtotal</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in cartItems)
                    {
                        var initialQuantity = item.Quantity > 0 ? item.Quantity : 1;
                        var initialSubtotal = item.Price * initialQuantity;

                        <tr>
                            <td>@item.ProductName</td>
                            <td>@item.ProductDescription</td>
                            <td class="price">@item.Price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("tr-TR"))</td>
                            <td>
                                <input type="number" name="cartItems[@item.ProductId].Quantity"
                                       value="@initialQuantity" min="1" class="form-control quantity" data-price="@item.Price" />
                            </td>
                            <td class="subtotal">@initialSubtotal.ToString("N", System.Globalization.CultureInfo.GetCultureInfo("tr-TR"))</td>
                            <td>
                                <form asp-action="DeleteCart" asp-controller="Cart" method="post">
                                    <input type="hidden" name="productId" value="@item.ProductId" />
                                    <div class="mb-3 col-6 col-sm-3">
                                        <button class="btn btn-outline-danger d-block w-200 mt-3" type="submit" name="submit">Remove</button>
                                    </div>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            


        </form>
        <div class="mt-3">
            <h4>Total: <span id="totalAmount">@formattedTotalAmount</span></h4>
        </div>
    }
    else
    {
        <p>Your cart is empty.</p>
    }

    <div class="mt-3">
        <a asp-action="Index" asp-controller="Home" class="btn btn-secondary">Continue Shopping</a>
        <form asp-action="ConfirmOrder" asp-controller="Cart" method="post" class="d-inline">
            <button type="submit" class="btn btn-primary">Confirm Order</button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const quantityInputs = document.querySelectorAll('.quantity');

            quantityInputs.forEach(input => {
                input.addEventListener('input', updateSubtotalAndTotal);
            });

            function updateSubtotalAndTotal(event) {
                const input = event.target;
                const price = parseFloat(input.getAttribute('data-price').replace('₺', '').replace(',', '.'));
                const quantity = parseInt(input.value, 10);
                const subtotal = price * quantity;

                const subtotalElement = input.closest('tr').querySelector('.subtotal');
                subtotalElement.textContent = formatCurrency(subtotal);

                updateTotalAmount();
            }

            function updateTotalAmount() {
                let totalAmount = 0;
                document.querySelectorAll('.subtotal').forEach(sub => {
                    const cleanedValue = sub.textContent
                        .replace('₺', '')
                        .replace(/\s/g, '')
                        .replace(',', '.');

                    const subtotalValue = parseFloat(cleanedValue);
                    if (!isNaN(subtotalValue)) {
                        totalAmount += subtotalValue;
                    }
                });

                // Yuvarlama işlemi
                totalAmount = Math.round(totalAmount * 100) / 100;
                document.getElementById('totalAmount').textContent = formatCurrency(totalAmount);
            }

            function formatCurrency(amount) {
                return `₺${amount.toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;
            }

            updateTotalAmount();
        });
    </script>
}
